<?php
/**
 * @file
 * A very lightweight jQuery lightbox plugin.
 */

/**
 * Implements hook_library_info().
 */
function featherlight_library_info() {
  $libraries['featherlight'] = array(
    'title' => 'Featherlight',
    'website' => 'https://noelboss.github.io/featherlight/',
    'version' => '1.7.13',
    'js' => array(
      backdrop_get_path('module', 'featherlight') . '/library/featherlight.min.js' => array(),
    ),
    'css' => array(
      backdrop_get_path('module', 'featherlight') . '/library/featherlight.min.css' => array(),
    ),
  );
  $libraries['featherlight-gallery'] = array(
    'title' => 'Featherlight Gallery',
    'website' => 'https://noelboss.github.io/featherlight/gallery.html',
    'version' => '1.7.13',
    'js' => array(
      backdrop_get_path('module', 'featherlight') . '/library/featherlight.gallery.min.js' => array(),
    ),
    'css' => array(
      backdrop_get_path('module', 'featherlight') . '/library/featherlight.gallery.min.css' => array(),
    ),
    'dependencies' => array(
      array('featherlight', 'featherlight'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_config_info().
 */
function featherlight_config_info() {
  return array(
    'featherlight.settings' => array(
      'label' => t('Featherlight settings'),
      'group' => t('Configuration'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function featherlight_menu() {
  $items['admin/config/media/featherlight'] = array(
    'title' => 'Featherlight',
    'description' => 'Configure global Featherlight options.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('featherlight_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'featherlight.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function featherlight_theme($existing, $type, $theme, $path) {
  return array(
    'featherlight' => array(
      'variables' => array(
        'item' => array(),
        'content_image_style' => '',
        'lightbox_image_style' => '',
        'caption_attribute' => '',
        'gallery' => FALSE,
      ),
      'file' => 'featherlight.theme.inc',
    ),
  );
}

/**
 * Implements hook_init().
 */
function featherlight_init() {
  if (!backdrop_installation_attempted()) {
    $config = config_get('featherlight.settings');

    if ($config['every_page'] == TRUE) {
      // Add Featherlight library files.
      backdrop_add_library('featherlight', 'featherlight', TRUE);
      if ($config['gallery'] == TRUE) {
        backdrop_add_library('featherlight', 'featherlight-gallery', TRUE);
      }
      backdrop_add_js(backdrop_get_path('module', 'featherlight') . '/js/featherlight.js');
      backdrop_add_css(backdrop_get_path('module', 'featherlight') . '/css/featherlight.css');

      // Add Featherlight settings.
      backdrop_add_js(array('featherlight' => $config), 'setting');
    }
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function featherlight_field_formatter_info() {
  return array(
    'featherlight' => array(
      'label' => t('Featherlight'),
      'field types' => array('image'),
      'settings' => array(
        'featherlight_image_style_content' => '',
        'featherlight_image_style_lightbox' => '',
        'featherlight_caption_attribute' => '',
        'featherlight_gallery' => FALSE,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function featherlight_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $settings = $instance['display'][$view_mode]['settings'];
  $image_styles = image_style_options(FALSE, PASS_THROUGH);

  $element['featherlight_image_style_content'] = array(
    '#type' => 'select',
    '#title' => t('Content image style'),
    '#description' => t('The image style to use for the <em>content</em> image.'),
    '#options' => $image_styles,
    '#empty_option' => t('None (original image)'),
    '#default_value' => $settings['featherlight_image_style_content'],
  );
  $element['featherlight_image_style_lightbox'] = array(
    '#type' => 'select',
    '#title' => t('Lightbox image style'),
    '#description' => t('The image style to use for the <em>lightbox</em> image.'),
    '#options' => $image_styles,
    '#empty_option' => t('None (original image)'),
    '#default_value' => $settings['featherlight_image_style_lightbox'],
  );
  $element['featherlight_caption_attribute'] = array(
    '#type' => 'select',
    '#title' => t('Caption'),
    '#description' => t('The image attribute to use for the lightbox caption.'),
    '#options' => array(
      'alt' => t('Alt'),
      'title' => t('Title'),
    ),
    '#empty_option' => t('None'),
    '#default_value' => $settings['featherlight_caption_attribute'],
  );
  if ($field['cardinality'] != 1 || $instance['entity_type'] == 'views') {
    $element['featherlight_gallery'] = array(
      '#type' => 'checkbox',
      '#title' => t('Gallery'),
      '#description' => t('Display images in a gallery.'),
      '#default_value' => $settings['featherlight_gallery'],
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function featherlight_field_formatter_settings_summary($field, $instance, $view_mode) {
  $settings = $instance['display'][$view_mode]['settings'];
  $image_styles = image_style_options(FALSE, PASS_THROUGH);

  // Content image style.
  if (!empty($settings['featherlight_image_style_content'])) {
    $summary[] = t('Content image style: @content', array('@content' => $image_styles[$settings['featherlight_image_style_content']]));
  }
  else {
    $summary[] = t('Content image style: None (original image)');
  }

  // Lightbox image style.
  if (!empty($settings['featherlight_image_style_lightbox'])) {
    $summary[] = t('Lightbox image style: @lightbox', array('@lightbox' => $image_styles[$settings['featherlight_image_style_lightbox']]));
  }
  else {
    $summary[] = t('Lightbox image style: None (original image)');
  }

  // Caption.
  if (!empty($settings['featherlight_caption_attribute'])) {
    $summary[] = t('Caption: @caption', array('@caption' => backdrop_ucfirst($settings['featherlight_caption_attribute'])));
  }
  else {
    $summary[] = t('Caption: None');
  }

  // Gallery.
  if ($field['cardinality'] != 1) {
    $summary[] = t('Gallery: @gallery', array('@gallery' => $settings['featherlight_gallery'] == TRUE ? 'Yes' : 'No'));
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function featherlight_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $element = array();

  // Output each image as a Featherlight lightbox.
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'featherlight',
      '#item' => $item,
      '#content_image_style' => $settings['featherlight_image_style_content'],
      '#lightbox_image_style' => $settings['featherlight_image_style_lightbox'],
      '#caption_attribute' => $settings['featherlight_caption_attribute'],
      '#gallery' => $settings['featherlight_gallery'],
    );
  }

  return $element;
}

